plugins {
    id 'com.android.application'
}

//def packageTime() {
//    return new Date().format("yyyy-MM-dd")
//}
def versionMajor = 1
def versionMinor = 1
def versionPatch = 0

android {
    //加载资源
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
    properties.load( inputStream )

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.zjnu.grouptour"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        ndk {
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a' //保留这些架构的CPU
//        }
        //为了兼容5.0以下使用vector图标
        vectorDrawables.useSupportLibrary = true
        //指定room.schemaLocation生成的文件路径  处理Room 警告 Schema export Error
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
        manifestPlaceholders = [EASEMOB_APPKEY: properties.getProperty("EASEMOB_APPKEY", "******"),
                                VIVO_PUSH_APPKEY: properties.getProperty("VIVO_PUSH_APPKEY", "******"),
                                VIVO_PUSH_APPID: properties.getProperty("VIVO_PUSH_APPID", "******"),
                                BAIDU_LOCATION_APPKEY: properties.getProperty("BAIDU_LOCATION_APPKEY", "******")
        ]

        multiDexEnabled true
    }

    signingConfigs {
        release {
            try {
                storeFile file("../KEY_STORE/grouptour.jks")
                storePassword "123456"
                keyAlias "key0"
                keyPassword "123456"
                v1SigningEnabled true
                v2SigningEnabled true
            }
            catch (ex) {
                ex.printStackTrace()
                throw new InvalidUserDataException("秘钥用户名或密码错误${ex.getMessage()}")
            }
        }
        debug {
            try {
                storeFile file("../KEY_STORE/grouptour.jks")
                storePassword "123456"
                keyAlias "key0"
                keyPassword "123456"
                v1SigningEnabled true
                v2SigningEnabled true
            }
            catch (ex) {
                throw new InvalidUserDataException("秘钥用户名或密码错误")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false  // false表示不混淆，true表示混淆
            shrinkResources false  // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
            buildConfigField "boolean", "isDebug", "false"

            applicationVariants.all { variant ->  // 遍历得出所有的variant
                variant.outputs.all {  // 遍历所有的输出类型，一般是debug和replease
                    def apkName = "grouptour_${variant.versionName}"
                    if (!variant.flavorName.isEmpty()) {
                        apkName += "_${variant.flavorName}"
                    }
                    if (variant.buildType.name.equals('release')) {
                        outputFileName = apkName + "_release.apk"
                    } else if (variant.buildType.name.equals('debug')) {
                        outputFileName = apkName + "_debug.apk"
                    }
                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.debug
            buildConfigField "boolean", "isDebug", "true"

            applicationVariants.all { variant ->
                variant.outputs.all {
                    def apkName = "grouptour_${variant.versionName}"
                    if (!variant.flavorName.isEmpty()) {
                        apkName += "_${variant.flavorName}"
                    }
                    if (variant.buildType.name.equals('release')) {
                        outputFileName = apkName + "_release.apk"
                    } else if (variant.buildType.name.equals('debug')) {
                        outputFileName = apkName + "_debug.apk"
                    }
                }
            }
        }
    }

    flavorDimensions "min"
    productFlavors {
        dev {
            minSdkVersion 21
            dimension "min"
        }

        prod {
            minSdkVersion 19
            dimension "min"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {//加上这写代码
        pickFirst 'lib/x86/libsqlite.so'
        pickFirst 'lib/x86_64/libsqlite.so'
        pickFirst 'lib/armeabi-v7a/libsqlite.so'
        pickFirst 'lib/arm64-v8a/libsqlite.so'
        pickFirst 'lib/x86/libhyphenate.so'
        pickFirst 'lib/x86_64/libhyphenate.so'
        pickFirst 'lib/armeabi-v7a/libhyphenate.so'
        pickFirst 'lib/arm64-v8a/libhyphenate.so'
    }

    sourceSets{
        main{
            jniLibs.srcDir 'libs'
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }

    repositories {
        flatDir {
            mavenCentral()
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation (name: 'BaiduLBS_AndroidSDK_Lib', ext: 'aar')
//    解决升级到AndroidX且使用3.7.3版本以上SDK报找不到LocalBroadcastManager的问题
//    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    //ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // google bottom navigation bar
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.1.0'
    // resolve 64k limit
    implementation 'com.android.support:multidex:1.0.3'
    // hms push
    implementation 'com.huawei.hms:push:4.0.2.300'
    // meizu push
    implementation 'com.meizu.flyme.internet:push-internal:3.7.0@aar'//配置集成sdk
    //oppo push
    implementation (name:'oppo_push_v2.1.0',ext:'aar')
    // Google firebase cloud messaging
    implementation 'com.google.android.gms:play-services-base:11.4.0'
    implementation 'com.google.firebase:firebase-messaging:11.4.0'
    // fresh and load more
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    // room
    implementation "androidx.room:room-runtime:2.2.5"
    annotationProcessor "androidx.room:room-compiler:2.2.5"
    // parse
    implementation 'com.parse:parse-android:1.13.1'
    // bugly
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    // pickers
    implementation 'com.alibaba:fastjson:1.2.48'
    implementation  'com.github.addappcn:android-pickers:2.0.0'
    // butterknife
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    // EaseIMKit
    ////api (project(path: ':ease-im-kit'))
    implementation 'com.hyphenate:ease-im-kit:3.8.0'

    // EaseIMKit依赖，必须添加环信IM SDK
    ////implementation project(path: ':hyphenatechatsdk')
    implementation 'com.hyphenate:hyphenate-chat:3.8.0'
    //EaseCallKit依赖，必须添加环信IM SDK
    //api project(':ease-call-kit')
    implementation 'com.hyphenate:ease-call-kit:3.8.0'

    //网络请求相关
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //沉浸式状态栏
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    //轮播图
    implementation 'com.youth.banner:banner:2.1.0'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'
    // Android Annotations 存在与gradle不兼容的问题, 导致build失败
//    annotationProcessor "org.androidannotations:androidannotations:4.5.2"
//    implementation "org.androidannotations:androidannotations-api:4.5.2"
    //日志相关
    implementation 'com.orhanobut:logger:2.2.0'
    //RecyclerView adapter帮助类
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'
}

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
//repositories {
//    mavenCentral()
//    flatDir{
//        dirs 'libs'
//    }
//}